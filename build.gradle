buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
		dockerPluginVersion = '0.13.0'
	}
	repositories {
		mavenCentral()
		maven {
	    	url "https://plugins.gradle.org/m2/"
	    }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${dockerPluginVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8;

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = 'Finchley.RELEASE'
}

repositories {
	mavenCentral()
	maven {
		url "http://maven.jahia.org/maven2"
	}
}

bootJar {
    baseName = 'config-server'
    version =  '1.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-config-server')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
}

docker {
    dependsOn build
    name "${bootJar.baseName}:${bootJar.version}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

